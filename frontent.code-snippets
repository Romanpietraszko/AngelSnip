{
"React": {
	  "prefix": "reactcomponent",
	  "body": [
		"import React, {useState} form 'react'",
		"\n",
        "const ClassGenerator = ()=>{",
		"   const[className,setClassName] = useState('');",
        "   const[attributes,setAttributes] = useState('');",
		"   const[result,setResult] = useState('');",
        "\n",
		"   const handleGenerate = async () =>{",
        "  //prototypowy request do backhandu/AI",
		"   const response = await fetch('/api/generate',{",
        "     method: 'POST',",
        "     headers:{'Content-Type':'application/json'},",
		"     body: JSON.stringify({className, attributes}),",
        "    });",
		"\n",
        "   const data = await response.json();",
		"   setResult(data.code || 'Brak odpowiedzi');",
        "};",
		"\n",
        "return (",
        "  <div style ={{ maxWidth: 600, margin:'0 auto', padding: 20}}>",
		"     <h2>Generuj klasę Python</h2>",
        "     <input",
		"       type = 'text'",
        "       placholder = 'Nazwa klasy'",
		"       value = {className}",
        "       onChange = {(e) => setClassName(e.target.value)}",
		"       style = {{ width: '100%', marginBottom: 10 }}",
        "      />",
		"     <input",
		"       type = 'text'",
        "       placholder = 'Atrybuty (np.name,email)'",
		"       value = {attributes}",
        "       onChange = {(e) => setAttributes(e.target.value)}",
		"       style = {{ width: '100%', marginBottom: 10 }}",
        "      />",
        "     <button onClick = {handleGenerate}>Generuj z AI</button>",
        "\n",
		"{result && (",
        " <pre style = {{ marignTop: 20, background:'#f4f4f4', padding: 10}}>",
		"   {result}",
        " </pre>",
		")}",
      "</div>",
	");",
  "};",
  "export default ClassGenerator"
	  ],
	  "description": "Szablon do protypowania w react"
	},
    "Szablon do Klasycznego frontendu": {
	  "prefix": "front",
	  "body": [
		"<!DOCTYPE html>",
		"<html lang = 'pl'>",
        "<head>",
		"  <meta charset = 'UTF-8'>",
        "  <meta name ='viewport', content = 'width=device - width, initial-scale=0'>",
		"  <title> Prototyp Aplikacji <title>",
        "\n",
		  "<style>",
		"/* |STYL BAZOWY DLA CAŁEGO DOKUMENTU| */",
        "body {",
		"  font-family: sans-serif;",
        "  background-color:#f0f0f0;",
        "  padding: 40px;",
        "  color: #333;",
		"  margin: 0;",
        "}",
		"\n",
        "/* STYL DLA GŁÓWNEGO KONTENERA */",
		"#app {",
        "   max-width:600px;",
		"   margin:auto;",
		 "  background: #fff;",
		"   padding: 30px;",
        "   border-radius: 8px;",
		"   box-shadow: 0 0 10px rgba(0,0,0,0.1);",
        "}",
		"\n",
		"/* PRZYCISK AKCJI */",
		".btn{",
        "  display: inlin-block;",
		"  padding: 10px 20px",
        "  background-color: white;",
		"  color: white;",
		"  border: none;",
		"  border-radius: 4px;",
        "  cursor: pointer;",
		"  margin-top:20px;",
        "}",
		".btn:hover{",
        "   background-color: #0056b3;",
		" }",
		"/* MIEJSCE NA WYNIK DZIAŁANIA */",
        ".output {",
		"  margin-top: 20px;",
		"  font-weight: bold;",
		"}",
        "</style>",
	 " </head>",
    "   <body>",
		"/* STRUKTURA HTML - KOMPONENT BAZOWY */",
        "<div id = 'app'>",
		"<h1>Prototyp Interfejsu</h1>",
        "<p> Tu możesz dodać swój komponent, np formularz, listę, przycisk..</p>",
		"<button class='btn' onClick='handleClick()'>Klinij mnie</button>",
		"<div class='output' id='output'></div>",
	  "</div>",
        "/* LOGIKA JS INTERAKCJE I AKCJE */",
	 "<script>",
		"// OBSŁUGA KLIKNIĘCIA PRZYCISKU",
		"function handleClick(){",
		"const output = document.getElementById('output');",
		"output.textContent = 'Przycisk został kliknięty'",
		"}",
        "// INICJALIZACJA PO ZAŁADOWANIU STRONY",
      "dokument.addEventListener('DOMContentLoaded',() =>{",
		"console.log('Prototyp załadowany');",
		"// Możesz tu dodać więcej logiki startowej",
		"});",
    "  </script>",
		"\n",
    "</body>",
	"</html>"
	  ],
	  "description": "Szablon do protypowania w klasycznym frontendzie"
	}
}
